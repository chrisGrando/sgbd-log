/**
*** @author chrisGrando
*** Classe destinada para a janela gráfica da vizualização de tabela do query.
*** (Contém código gerado automaticamente pela IDE. Recomenda-se não editar
*** esses segmentos com avisos/comentários em inglês)
**/
package app.gui;

import app.gui.csv.TableWriter;
import app.gui.filter.CsvFileFilter;
import app.gui.resources.HardCoded;
import globals.AppSystem;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.net.URISyntaxException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

public class TableWindow extends javax.swing.JFrame {
    private final MainWindow mainWindow;
    private final List<String[]> tableContents;

    //Construtor
    public TableWindow(MainWindow mw, List<String[]> tc) {
        mainWindow = mw;
        tableContents = tc;
        initComponents();
        setIcon();
        setCustomFonts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser_CSV = new javax.swing.JFileChooser();
        jPanel_Main = new javax.swing.JPanel();
        jScrollPane_Table = new javax.swing.JScrollPane();
        jTable_Query = new javax.swing.JTable();
        jPanel_Button = new javax.swing.JPanel();
        jButton_Export = new javax.swing.JButton();

        jFileChooser_CSV.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooser_CSV.setCurrentDirectory(null);
        jFileChooser_CSV.setDialogTitle("Exportar tabela");
        jFileChooser_CSV.setFileFilter(new CsvFileFilter());
        jFileChooser_CSV.setToolTipText("");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vizualização de tabela");
        setMinimumSize(new java.awt.Dimension(640, 480));
        setPreferredSize(new java.awt.Dimension(640, 480));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                onWindowOpened(evt);
            }
        });

        jScrollPane_Table.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jTable_Query.setAutoCreateRowSorter(true);
        jTable_Query.setFont(new java.awt.Font("Liberation Mono", 0, 16)); // NOI18N
        jTable_Query.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"VALUE 1", "VALUE 2", "VALUE 3", "VALUE 4"},
                {"VALUE 5", "VALUE 6", "VALUE 7", "VALUE 8"}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_Query.setIntercellSpacing(new java.awt.Dimension(2, 2));
        jTable_Query.setRowHeight(30);
        jTable_Query.setShowGrid(true);
        jScrollPane_Table.setViewportView(jTable_Query);

        jButton_Export.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jButton_Export.setText("Exportar como planilha (CSV)");
        jButton_Export.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onExportButtonClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel_ButtonLayout = new javax.swing.GroupLayout(jPanel_Button);
        jPanel_Button.setLayout(jPanel_ButtonLayout);
        jPanel_ButtonLayout.setHorizontalGroup(
            jPanel_ButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ButtonLayout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jButton_Export, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(172, 172, 172))
        );
        jPanel_ButtonLayout.setVerticalGroup(
            jPanel_ButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton_Export, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel_MainLayout = new javax.swing.GroupLayout(jPanel_Main);
        jPanel_Main.setLayout(jPanel_MainLayout);
        jPanel_MainLayout.setHorizontalGroup(
            jPanel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_MainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane_Table)
                    .addComponent(jPanel_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel_MainLayout.setVerticalGroup(
            jPanel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_MainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane_Table, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //Executa ao abrir a janela
    private void onWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_onWindowOpened
        String defaultPath;
        int columnSize = jTable_Query.getColumnCount();
        int rowSize = jTable_Query.getRowCount();
        DefaultTableModel jTableModel = (DefaultTableModel)jTable_Query.getModel();
        
        /*
        * Limpa a tabela.
        * Remove todas as linhas e todas as colunas.
        */
        
        //Linhas
        for(int i = rowSize; i > 0; i--)
            jTableModel.removeRow(i - 1);
        
        //Colunas
        for(int i = columnSize; i > 0; i--) {
            String id = jTableModel.getColumnName(i - 1);
            TableColumn tc = jTable_Query.getColumn(id);
            jTable_Query.removeColumn(tc);
        }
        
        //Reseta o número de linhas e colunas
        jTableModel.setRowCount(0);
        jTableModel.setColumnCount(0);
        
        /*
        * Cria nova tabela.
        * Gera novas colunas e novas linhas
        */
        
        //Colunas
        columnSize = this.tableContents.get(0).length;
        for(int i = 0; i < columnSize; i++) {
            String id = this.tableContents.get(0)[i];
            jTableModel.addColumn(id);
        }
        
        //Linhas
        rowSize = this.tableContents.size();
        for(int i = 1; i < rowSize; i++) {
            String[] row = this.tableContents.get(i);
            jTableModel.addRow(row);
        }
        
        //Desabilita a edição de cédulas
        jTable_Query.setDefaultEditor(Object.class, null);
        
        /*
        * Tabelas CSV.
        * Configura diretório padrão para salvar arquivos.
        */
        
        //Obtém localização do arquivo JAR
        try {
            defaultPath = AppSystem.getJarFolder();
        }
        catch (URISyntaxException error) {
            String msg = "[AVISO] Não foi possível encontrar o diretório padrão...";
            Logger.getGlobal().log(Level.WARNING, msg, error);
            defaultPath = System.getProperty("user.dir");
        }
        
        //Configura o diretório padrão
        jFileChooser_CSV.setCurrentDirectory(new File(defaultPath));
        jFileChooser_CSV.setSelectedFile(new File(defaultPath + "/query.csv"));
        
        //Atualiza console
        mainWindow.externalEvent(evt.paramString() + ",title=" + this.getTitle());
    }//GEN-LAST:event_onWindowOpened

    //Exporta tabela como planilha CSV
    private void onExportButtonClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onExportButtonClicked
        int returnVal = jFileChooser_CSV.showSaveDialog(this);
        TableWriter tw;
        File file;
        
        //Usuário selecionou um arquivo
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //Obtém o caminho de diretório completo do arquivo
            file = jFileChooser_CSV.getSelectedFile();
            
            //Grava a planilha CSV
            tw = new TableWriter();
            tw.write(file.getAbsolutePath(), this.tableContents);
        }
        
        //Atualiza console
        mainWindow.externalEvent(evt.paramString());
    }//GEN-LAST:event_onExportButtonClicked

    //Carrega e aplica as fontes personalizadas na janela
    private void setCustomFonts() {
        //Obtém as fontes
        HardCoded hc = new HardCoded();
        Font cousine = hc.getTTF("ttf/Cousine.ttf");
        Font lekton = hc.getTTF("ttf/Lekton.ttf");
        
        //Aborta caso tenha ocorrido algum erro
        if(cousine == null || lekton == null)
            return;
        
        //Registra as fontes
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        ge.registerFont(cousine);
        ge.registerFont(lekton);
        
        //Aplica as fontes nos elementos da janela
        jTable_Query.setFont(lekton.deriveFont(16f));
        jButton_Export.setFont(cousine.deriveFont(Font.BOLD, 14f));
    }
    
    //Exibe o ícone do aplicativo
    private void setIcon() {
        HardCoded hc = new HardCoded();
        setIconImage(hc.getIconFile("icon/ICON_256.png"));
    }
    
    //Creates new form TableWindow
    public void start() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TableWindow(this.mainWindow, this.tableContents).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Export;
    private javax.swing.JFileChooser jFileChooser_CSV;
    private javax.swing.JPanel jPanel_Button;
    private javax.swing.JPanel jPanel_Main;
    private javax.swing.JScrollPane jScrollPane_Table;
    private javax.swing.JTable jTable_Query;
    // End of variables declaration//GEN-END:variables
}
